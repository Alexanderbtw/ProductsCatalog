version: '3.9'

networks:
    product-net:
        driver: bridge

services:
  app:
    image: ${DOCKER_REGISTRY-}productscatalogfrontend
    build:
      context: .
      dockerfile: ProductsCatalog.Frontend/Dockerfile
    networks:
      - product-net
    depends_on:
      - db
      - auth
    environment:
      - ConnectionString=User ID=postgres;Password=my_secret_pass;Host=db;Port=5432;Database=ProductsCatalog;
  
  auth:
    container_name: auth
    hostname: auth
    image: "ecommerce-auth"
    build:
      context: D:\C#\Practice\ECommerce
      dockerfile: .\Ordering.API\Dockerfile
    networks:
      - product-net
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://auth:5142
      - ConnectionString=User ID=postgres;Password=my_secret_pass;Host=db;Port=5432;Database=OrderingDb;
    depends_on:
      - db

  proxy:
    image: nginx:mainline
    networks:
      - product-net
    depends_on:
      - auth

  db:
    image: postgres:16.0-alpine3.18
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=my_secret_pass
      - POSTGRES_DB=ProductsCatalog
    volumes:
      - products-data:/var/lib/postgresql/data
    ports:
       - 5432:5432
    networks:
      - product-net

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - product-net
    depends_on:
      - db

volumes:
    products-data:
      